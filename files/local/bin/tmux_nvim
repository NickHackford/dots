#!/usr/bin/env bash

# Handle different modes of operation
file_to_open="$1"
line_number="$2"

# In tmux - build the nvim command with server socket based on session
session_name=$(tmux display-message -p '#{session_name}')
server_socket="/tmp/nvim-server-${session_name}.pipe"

# Check if nvim is already running in any pane
nvim_pane=$(tmux list-panes -s -F "#{pane_id} #{pane_start_command}" | grep ": nvim_pane;" | head -1 | cut -d' ' -f1)

if [[ -n "$nvim_pane" ]]; then
    # Nvim pane exists
    current_pane=$(tmux display-message -p '#{pane_id}')
    
    if [ -n "$file_to_open" ]; then
        # Open file in existing nvim instance
        if [ -n "$line_number" ]; then
            nvim --server "$server_socket" --remote-send "<cmd>e +$line_number $file_to_open<cr><cmd>filetype detect<cr>"
        else
            nvim --server "$server_socket" --remote-send "<cmd>e $file_to_open<cr><cmd>filetype detect<cr>"
        fi
        # Switch to nvim window
        nvim_window=$(tmux list-panes -s -F "#{pane_id} #{window_id}" | grep "$nvim_pane" | cut -d' ' -f2)
        tmux select-window -t "$nvim_window"
        tmux select-pane -t "$nvim_pane"
    elif [ "$current_pane" = "$nvim_pane" ]; then
        # No file specified and we're in the nvim pane, relaunch nvim
        nvim --listen "$server_socket"
    else
        # No file specified but not in nvim pane, just switch to it
        nvim_window=$(tmux list-panes -s -F "#{pane_id} #{window_id}" | grep "$nvim_pane" | cut -d' ' -f2)
        tmux select-window -t "$nvim_window"
        tmux select-pane -t "$nvim_pane"
    fi
else
    # Create new nvim window
    nvim_cmd="nvim --listen $server_socket"
    if [ -n "$file_to_open" ]; then
        if [ -n "$line_number" ]; then
            nvim_cmd="$nvim_cmd +$line_number"
        fi
        nvim_cmd="$nvim_cmd \"$file_to_open\""
    fi
    tmux new-window -n nvim ": nvim_pane; $nvim_cmd; exec zsh"
fi
