#!/usr/bin/env bash

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source plugin submodules
source ~/.config/zsh/plugins/vim/vim.plugin.zsh
source ~/.config/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.config/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.config/zsh/plugins/powerlevel10k/powerlevel10k.zsh-theme
source ~/.config/zsh/plugins/powerlevel10k/config/p10k-robbyrussell.zsh
source ~/.config/zsh/.p10k.zsh

autoload -Uz compinit
if [[ $(find ~/.zcompdump -mtime -1 2>/dev/null) ]]; then
  compinit -C
else
  compinit
fi

# history setup
setopt APPEND_HISTORY
setopt SHARE_HISTORY
HISTFILE=$HOME/.zsh_history
SAVEHIST=1000
HISTSIZE=999
setopt HIST_EXPIRE_DUPS_FIRST
setopt EXTENDED_HISTORY

# Start typing + [Up-Arrow] - fuzzy find history forward
autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search
bindkey '\e[A' up-line-or-beginning-search
# Start typing + [Down-Arrow] - fuzzy find history backward
autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '\e[B' down-line-or-beginning-search

addToPathFront() {
  if [[ "$PATH" != *"$1"* ]]; then
    export PATH=$1:$PATH
  fi
}
addToPathFront $HOME/bin:/usr/local/bin
addToPathFront $HOME/.local/bin
addToPathFront $HOME/.yarn/bin
addToPathFront $HOME/.config/yarn/global/node_modules/.bin
addToPathFront $HOME/.cargo/bin
addToPathFront $HOME/go/bin

export VISUAL=nvim
export EDITOR="$VISUAL"

export CLICOLOR=1
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'

bindkey -s '^ ' "^utmux_sessionizer\n"
bindkey -s -M vicmd '^ ' "ddAtmux_sessionizer\n"
bindkey -s ^t "^utmux a\n"
bindkey -s -M vicmd ^t "ddAtmux a\n"
bindkey -s ^f "^uvim_opener\n"
bindkey -s -M vicmd ^f "ddAvim_opener\n"
bindkey -s ^p "^utmux_organize_windows\n"
bindkey -s -M vicmd ^p "ddAtmux_organize_windows\n"
bindkey -s ^b "^ubtop\n"
bindkey -s -M vicmd ^b "ddAbtop\n"
bindkey -s ^v "^uvi\n"
bindkey -s -M vicmd ^v "ddAvi\n"
bindkey -s ^y "^uy\n"
bindkey -s -M vicmd ^y "ddAy\n"
bindkey -s ^g "^ulg\n"
bindkey -s -M vicmd ^g "ddAlg\n"

alias -- cat=bat
alias -- ls=exa
alias -- la='exa -la'
alias -- ll='exa -l'

if [ -n "$TMUX" ]; then
    alias -- vi='tmux_nvim'
    alias -- lg='tmux_lazygit'
elif [ -z "$TMUX" ]; then
    alias -- vi='nvim'
    alias -- lg='lg'
fi

alias -- ai='opencode run'

alias -- ng='sudo nix-env -p /nix/var/nix/profiles/system --delete-generations old && nix-collect-garbage -d'

alias -- meraxes='ssh nick@192.168.86.13'
alias -- mushu='ssh nick@192.168.86.31'
alias -- sindy='ssh nick@192.168.86.51'

function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}
eval "$(zoxide init zsh)"

if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi

if [ -f ~/.zshrc.generated ]; then
  source ~/.zshrc.generated
fi
